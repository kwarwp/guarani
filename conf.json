
{'date': 'Fri Aug 10 2018 14:46:23.27 GMt-0300 (-03) -X- Kwarwp -X-',
'error': '''class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
        self.esquerda()
        self.larga()
        self.direita()
    '''},
{'date': 'Fri Aug 10 2018 14:49:57.299 GMt-0300 (-03) -X- Kwarwp -X-',
'error': '''class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
        self.esquerda()
        self.larga()
        self.direita()
    '''},
{'date': 'Fri Aug 10 2018 14:52:28.749 GMt-0300 (-03) -X- Kwarwp -X-',
'error': '''class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    '''},
{'jogo': jogo, 'date': 'Fri Aug 10 2018 15:57:48.633 GMt-0300 (-03) -X- Kwarwp -X-',
'code': '''class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
        self.esquerda()
        self.larga()
        self.direita()
    '''},
{'jogo': jogo, 'date': 'Fri Aug 10 2018 16:05:55.0 GMt-0300 (-03) -X- Kwarwp -X-',
'code': '''class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    '''},
{'jogo': 665, 'date': 'Fri Aug 10 2018 16:08:09.999 GMt-0300 (-03) -X- Kwarwp -X-',
'code': '''class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    '''},
{'jogo': 666 := dict_keys([]), 'date': 'Fri Aug 10 2018 16:14:35.15 GMt-0300 (-03) -X- Kwarwp -X-',
'code': '''class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    '''},
{'jogo': 666 := [], 'date': 'Fri Aug 10 2018 16:16:31.273 GMt-0300 (-03) -X- Kwarwp -X-',
'code': '''class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    '''},
{'jogo': 666 := ['__class__', '__eq__'], 'date': 'Fri Aug 10 2018 16:27:27.688 GMt-0300 (-03) -X- Kwarwp -X-',
'code': '''class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    '''},class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
        self.pega()
        self.anda()
    class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
    class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
    class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
        # foi990009999
    class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
        # foi----
    }, {'jogo': 000: = , 'date':1537467685936 '{} -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
        #fo--==-
    }, {'jogo': 000: = , 'date':"date":1537468193517 '{} -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
        #fo--==-==0000
    }, {'jogo': 000: = , 'date': '{'date': 1537468986331} -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
        #fo---------===
    }, {'jogo': 000: = ,  '{'date': 1537469230735} -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
        #fo-----444
    }, {'jogo': 000: = ,  'Thu Sep 20 2018 16:07:06.591 GMt-0300 (-03) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.pega()
        #fo----2222
    }, {'jogo': 000: = ,  'Thu Sep 20 2018 16:26:04.963 GMt-0300 (-03) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        #----
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:33:16.838 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:35:03.587 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:35:06.197 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:36:54.730 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:36:56.657 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:36:58.15 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:35.968 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:37.379 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:41.239 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:42.756 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:44.388 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:45.866 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:47.247 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:37:51.200 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:39:34.445 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:39:47.728 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:40:04.330 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:40:06.989 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:40:09.365 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:40:11.13 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:40:34.518 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:40:38.735 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:43:09.634 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.direita()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:43:12.697 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.direita()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:43:52.227 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:43:55.340 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:44:13.273 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:44:28.498 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:44:35.780 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:44:44.673 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:44:48.551 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:44:50.48 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:44:51.400 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:45:00.198 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:45:28.791 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:45:32.424 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:45:48.142 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:45:51.253 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:46:45.922 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:46:48.210 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:46:51.114 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:58:24.761 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 10:58:29.244 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 14:57:22.11 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 14:57:23.868 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 14:57:28.467 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 19:12:58.718 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 19:13:07.109 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 19:13:50.547 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 21:09:08.413 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Tue Oct 16 2018 21:09:11.106 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Wed Oct 17 2018 09:27:05.67 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Wed Oct 17 2018 09:27:08.293 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Wed Oct 17 2018 09:27:13.942 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Wed Oct 17 2018 09:27:47.101 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda()
        self.anda()
        self.esquerda()
        self.anda()
        self.anda()
        self.direita()
        self.larga()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:22:00.800 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:22:01.913 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:22:02.993 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:22:20.61 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:22:37.655 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.esquerda()
        self.larga()
        self.direita()
        self.direita()
        self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:23:27.581 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        #self.direita()
        #self.anda()
        #self.pega()
        #self.esquerda()
        #self.larga()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:23:43.983 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        #self.direita()
        #self.anda()
        #self.pega()
        #self.esquerda()
        #self.larga()
        sel    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:38:48.718 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        #self.direita()
        #self.anda()
        #self.pega()
        #self.esquerda()
        #self.larga()
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        self.anda() for i in range(3)
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        self.anda() for i in range(3)       }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:39:23.386 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        #self.direita()
        #self.anda()
        #self.pega()
        #self.esquerda()
        #self.larga()
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3)
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3)
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:39:31.714 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        #self.direita()
        #self.anda()
        #self.pega()
        #self.esquerda()
        #self.larga()
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:39:34.675 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        #self.direita()
        #self.anda()
        #self.pega()
        #self.esquerda()
        #self.larga()
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:41:14.688 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá meu povo da aldeia')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:41:16.422 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá meu povo da aldeia')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:43:38.313 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.empurre()
        self.empurre()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:43:40.246 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.empurre()
        self.empurre()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:49:14.336 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurre()
        self.empurre()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:49:16.116 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurre()
        self.empurre()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:50:09.516 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurra()
        self.empurra()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:50:11.355 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurre() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurra()
        self.empurra()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:51:03.578 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurra() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurra()
        self.empurra()
        self.esquerda()
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:51:06.612 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurra() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurra()
        self.empurra()
        self.esquerda()
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:51:20.681 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurra() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurra()
        self.empurra()
        self.esquerda()
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:51:21.908 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurra() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurra()
        self.empurra()
        self.esquerda()
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:51:22.955 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk quer chegar na oca mas tem
        uma pedra no caminho.
        Use self.empurra() quando estiver
        de frente para a pedra.
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        self.empurra()
        self.empurra()
        self.esquerda()
        self.anda()
        self.direita()
        self.anda()
        self.anda()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:52:50.926 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for i in range(12):
          self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:52:52.757 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for i in range(12):
          self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:52:54.946 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for i in range(12):
          self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:53:22.242 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('hello everyone')
        self.direita()
        for i in range(12):
          self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:53:23.288 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        repetir o comando self.anda().
        for cada_passo in range(4):
            self.anda()
    """
    def define_comportamento(self):
        self.fala('hello everyone')
        self.direita()
        for i in range(12):
          self.anda()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:54:52.740 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        remover cada pedra e chegar na oca.
        for cada_passo in range(4):
            self.anda()
            self.pega()
            # .....
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for cada_passo in range(9):
            self.anda()
            self.pega()
            self.esquerda()
            self.esquerda()
            self.larga()    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:54:54.679 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        remover cada pedra e chegar na oca.
        for cada_passo in range(4):
            self.anda()
            self.pega()
            # .....
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for cada_passo in range(9):
            self.anda()
            self.pega()
            self.esquerda()
            self.esquerda()
            self.larga()    }, {'jogo': 000: = ,  'Sat Oct 20 2018 17:55:49.578 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        remover cada pedra e chegar na oca.
        for cada_passo in range(4):
            self.anda()
            self.pega()
            # .....
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for cada_passo in range(9):
            self.anda()
            self.pega()
            self.esquerda()
            self.esquerda()
            self.larga()
            self.esquerda()
            self.esquerda()}, {'jogo': 000: = ,  'Sat Oct 20 2018 17:55:51.324 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        remover cada pedra e chegar na oca.
        for cada_passo in range(4):
            self.anda()
            self.pega()
            # .....
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for cada_passo in range(9):
            self.anda()
            self.pega()
            self.esquerda()
            self.esquerda()
            self.larga()
            self.esquerda()
            self.esquerda()}, {'jogo': 000: = ,  'Sat Oct 20 2018 17:56:37.496 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        remover cada pedra e chegar na oca.
        for cada_passo in range(4):
            self.anda()
            self.pega()
            # .....
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for cada_passo in range(9):
            self.anda()
            self.pega()
            self.esquerda()
            self.esquerda()
            self.larga()
            self.esquerda()
            self.esquerda()
        for i in range(3):
            self.anda()}, {'jogo': 000: = ,  'Sat Oct 20 2018 17:56:38.793 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando de repetição para
        remover cada pedra e chegar na oca.
        for cada_passo in range(4):
            self.anda()
            self.pega()
            # .....
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for cada_passo in range(9):
            self.anda()
            self.pega()
            self.esquerda()
            self.esquerda()
            self.larga()
            self.esquerda()
            self.esquerda()
        for i in range(3):
            self.anda()}, {'jogo': 000: = ,  'Sat Oct 20 2018 17:57:11.570 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Crie um novo comportamento que
        possa caminhar por um corredor.
    """
    def caminha_por_um_corredor(self, quantos_passos):
        # Use um comando de repetição que anda
        # por quantos_passos forem pedidos.
        pass
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(2)  # na verdade não é dois!!
        self.esquerda()
        self.caminha_por_um_corredor(2)  # na verdade não é dois!!
        # faça mais comandos até completar o Zigue Zaqgue
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:03:06.447 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Crie um novo comportamento que
        possa caminhar por um corredor.
    """
    def caminha(self, num_passos):
        for i in range(num_passos):
          self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha(11)  
        self.esquerda()
        self.caminha(4)
        self.esquerda()
        self.caminha(11)
        self.direita()
        self.caminha(4)
        self.direita()
        self.caminha(12)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:03:08.132 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Crie um novo comportamento que
        possa caminhar por um corredor.
    """
    def caminha(self, num_passos):
        for i in range(num_passos):
          self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha(11)  
        self.esquerda()
        self.caminha(4)
        self.esquerda()
        self.caminha(11)
        self.direita()
        self.caminha(4)
        self.direita()
        self.caminha(12)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:04:32.925 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá meu povo da aldeia')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:04:34.215 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá meu povo da aldeia')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:02.964 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        # Use um comando de repetição que
        # anda enquanto está livre.
        while self.olha == 'livre':
            self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        self.esquerda()
        self.caminha_por_um_corredor()
        # faça mais comandos até completar o Caracol
        # mas o melhor seria usar um for
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:06.234 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        # Use um comando de repetição que
        # anda enquanto está livre.
        while self.olha == 'livre':
            self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        self.esquerda()
        self.caminha_por_um_corredor()
        # faça mais comandos até completar o Caracol
        # mas o melhor seria usar um for
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:09.217 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        # Use um comando de repetição que
        # anda enquanto está livre.
        while self.olha == 'livre':
            self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        self.esquerda()
        self.caminha_por_um_corredor()
        # faça mais comandos até completar o Caracol
        # mas o melhor seria usar um for
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:11.996 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        # Use um comando de repetição que
        # anda enquanto está livre.
        while self.olha == 'livre':
            self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        self.esquerda()
        self.caminha_por_um_corredor()
        # faça mais comandos até completar o Caracol
        # mas o melhor seria usar um for
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:14.875 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        # Use um comando de repetição que
        # anda enquanto está livre.
        while self.olha == 'livre':
            self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        self.esquerda()
        self.caminha_por_um_corredor()
        # faça mais comandos até completar o Caracol
        # mas o melhor seria usar um for
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:19.243 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while True:
            while self.olha == 'livre':
                self.anda()
            self.direita()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:18.214 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        # Use um comando de repetição que
        # anda enquanto está livre.
        while self.olha == 'livre':
            self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        self.esquerda()
        self.caminha_por_um_corredor()
        # faça mais comandos até completar o Caracol
        # mas o melhor seria usar um for
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:12:21.430 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        # Use um comando de repetição que
        # anda enquanto está livre.
        while self.olha == 'livre':
            self.anda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        self.esquerda()
        self.caminha_por_um_corredor()
        # faça mais comandos até completar o Caracol
        # mas o melhor seria usar um for
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:14:17.323 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá meu povo da aldeia')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:14:45.894 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while True:
            while self.olha == 'livre':
                self.anda()
            self.direita()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:16:27.646 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Tchuk tenta proteger o pajé limpando a aldeia.
    """
    def define_comportamento(self):
        self.fala('olá meu povo da aldeia')
        self.direita()
        self.anda()
        self.pega()
        self.esquerda()
        for i in range(3):
            self.anda() 
        self.esquerda()
        self.anda()
        self.larga()
        self.direita()
        self.direita()
        for i in range(3):
            self.anda() 
              }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:17:11.973 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        for i in range(13):
            while self.olha == 'livre':
                self.anda()
            self.esqueda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:17:15.361 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        for i in range(13):
            while self.olha == 'livre':
                self.anda()
            self.esqueda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:17:42.570 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for i in range(num):
            while self.olha == 'livre':
                self.anda()
            self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:17:44.556 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for i in range(num):
            while self.olha == 'livre':
                self.anda()
            self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:19:14.394 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for i in range(num):
            while self.olha == 'livre':
                self.anda()
            self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:19:16.912 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for i in range(num):
            while self.olha == 'livre':
                self.anda()
            self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:21:16.468 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for i in range(num):
            while self.olha == 'livre':
                 self.anda()
            self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:21:18.94 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for i in range(num):
            while self.olha == 'livre':
                 self.anda()
            self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:22:32.924 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        while self.olha == 'livre':
            self.anda()
        self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:22:34.929 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        while self.olha == 'livre':
            self.anda()
        self.esquerda()
        
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:29:46.16 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while self.olha in ('livre', 'saida'):
            self.anda()
        self.esquerda()
        
        if self.olha() not in ('livre', 'saida'):
            self.direita()
            self.direita()                        
          
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for caminhos in range(13):
            self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:29:47.249 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while self.olha in ('livre', 'saida'):
            self.anda()
        self.esquerda()
        
        if self.olha() not in ('livre', 'saida'):
            self.direita()
            self.direita()                        
          
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for caminhos in range(13):
            self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:30:18.50 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while self.olha() in ('livre', 'saida'):
            self.anda()
        self.esquerda()
        
        if self.olha() not in ('livre', 'saida'):
            self.direita()
            self.direita()                        
          
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for caminhos in range(13):
            self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:30:19.761 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while self.olha() in ('livre', 'saida'):
            self.anda()
        self.esquerda()
        
        if self.olha() not in ('livre', 'saida'):
            self.direita()
            self.direita()                        
          
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for caminhos in range(13):
            self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:30:37.478 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while self.olha() in ('livre', 'saida'):
            self.anda()
        self.esquerda()
                     
          
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for caminhos in range(13):
            self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:30:40.385 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self):
        while self.olha() in ('livre', 'saida'):
            self.anda()
        self.esquerda()
                     
          
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        for caminhos in range(13):
            self.caminha_por_um_corredor()
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:32:21.900 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for caminhos in range(num):
            while self.olha() in ('livre', 'saida'):
                self.anda()
            self.esquerda()
                     
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:32:24.50 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for caminhos in range(num):
            while self.olha() in ('livre', 'saida'):
                self.anda()
            self.esquerda()
                     
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:33:46.768 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comportamento que pode caminhar por um corredor.
        Ajuste para que funcione no Caracol.
        Use o comando self.olhe() para saber
         se chegou ao fim do corredor.
    """
    def caminha_por_um_corredor(self, num):
        for caminhos in range(num):
            while self.olha() in ('livre', 'saida'):
                self.anda()
            self.esquerda()
                     
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.caminha_por_um_corredor(13)
        
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:37:23.858 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.esquerda()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            self.termina()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:37:32.496 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            self.termina()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:37:34.191 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            self.termina()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:41:45.142 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """       
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            for i in range(2):
              self.anda()
            self.esquerda()
            self.anda()
            self.direita()
            self.anda()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          for i in range(2):
              self.anda()
            self.direita()
            self.anda()
            self.esquerda()
            self.anda()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:41:55.631 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """       
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            for i in range(2):
              self.anda()
            self.esquerda()
            self.anda()
            self.direita()
            self.anda()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          for i in range(2):
              self.anda()
          self.direita()
            self.anda()
            self.esquerda()
            self.anda()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:42:02.791 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """       
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            for i in range(2):
              self.anda()
            self.esquerda()
            self.anda()
            self.direita()
            self.anda()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          for i in range(2):
              self.anda()
          self.direita()
          self.anda()
            self.esquerda()
            self.anda()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:42:10.968 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """       
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            for i in range(2):
              self.anda()
            self.esquerda()
            self.anda()
            self.direita()
            self.anda()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          for i in range(2):
              self.anda()
          self.direita()
          self.anda()
          self.esquerda()
          self.anda()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:42:13.758 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """       
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            for i in range(2):
              self.anda()
            self.esquerda()
            self.anda()
            self.direita()
            self.anda()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          for i in range(2):
              self.anda()
          self.direita()
          self.anda()
          self.esquerda()
          self.anda()
          
          
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:44:58.823 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """       
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
        self.anda()
        self.esquerda()
        if self.olha() == 'livre':
            for i in range(2):
              self.anda()
            self.esquerda()
            self.anda()
            self.direita()
            self.anda()
        else:
          self.esquerda()
          self.anda()
          self.anda()
          self.direita()
          for i in range(2):
              self.anda()
          self.direita()
          self.anda()
          self.esquerda()
          self.anda()   }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:53.210 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:54.988 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:56.201 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:56.569 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:56.941 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:57.347 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:57.730 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:58.495 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:58.876 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:59.235 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:45:59.723 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:00.81 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:01.886 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:03.593 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:05.260 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:05.665 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:06.135 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:06.753 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:07.155 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:07.604 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:08.686 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:09.622 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:10.37 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:10.693 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:11.116 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:11.543 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:12.643 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:14.331 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    }, {'jogo': 000: = ,  'Sat Oct 20 2018 18:46:20.319 GMt-0300 (Horário Padrão de Brasília) -X- Kwarwp -X-', 'code':class Tchuk(Kuarup):
    """ Use o comando if para saber se tem um obstáculo à frente.
        Volte e tente outro caminho
    """
    def define_comportamento(self):
        self.fala('olá a todos')
        self.direita()
    